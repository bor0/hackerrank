1 #lang racket
2
3 (define (f lst)
4     (map abs lst)
5      )
6
7 (define (read-list)
8     (let ([x (read)])
9       (if (eof-object? x)
10           (list)
11           (cons x (read-list)))))
12
13 (let ([lst (read-list)])
14      (let ([ans (f lst)])
15        (for ([x ans])
16              (printf "~a\n" x))))
17
